用DOSBOS编写汇编程序:https://blog.csdn.net/u011848617/article/details/41514961

1.先使用debug指令进入汇编:
2.使用相对应的指令进行操作:


r 寄存器    ：改变寄存器的内容.

d 段地址：偏移地址     :查看内存中的内容.

d 段地址：起始偏移地址 结尾偏移地址     :查看一段范围.

d 段寄存器：偏移地址

e 1000:0 0 1 2 ...  : 将内存1000:0~1000:9单元中的内容分别写为0 1 2 ...

输入e 1000:10 按Enter，在"."的后面提示输入想要写入的数据。
此时可以1.输入数据，按空格，即用输入的数据改写当前的内存单元
2.不输入数据，直接按空格，则不对当前内存单元进行改写.
当所有希望改写的内存单元改写完毕后，按Enter键，操作结束.

e 1000:0 "1" 'a' "a+b"      ：改为字符串

u 1000:0        以1000:0为起始，翻译为汇编指令.

rcs : 修改cs

rip : 修改ip 

t   : 直接执行cs：ip所指向的指令语句

a   : 向内存单元写入汇编指令,在给出的起始地址后直接按Enter键表示操作结束.

debug 的T指令在执行修改寄存器SS的指令时，下一条指令也紧接着执行。

要使用P命令执行 int 21

g 0012      :它表示执行程序到当前代码段(段地址在CS中)的0012H,也就是说 g 0012 将使Debug从当前的CS:IP指向的指令执行，一直到(IP)=0012H 为止

p           ：一次性执行完loop指令
使用Q命令退出Debug ,将返回到command 中
程序加载的顺序为：command加载Debug ，Debug 加载1.exe .
返回的顺序为:   从1.exe中的程序返回到Debug ,从Debug返回到command .
    1.  R指令/R指令 +寄存器 ：查看，改变CPU寄存器的内容;
    2.  D指令/D指令 段地址:偏移地址  ：查看内存中的内容;
    3.  E指令：改写内存中的内容;
    4.  U指令：将内存中的机器指令翻译成汇编指令/查看其他命令;
    5.  T指令：执行一条机器指令;
    6.  A指令：以汇编指令的格式在内存中写入一条机器指令;