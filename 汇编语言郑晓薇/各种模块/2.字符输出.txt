;输出三位以下(包三位)的数字
;被除数默认放在dx,ax中(即16位除法)
;123
;需要用到si,bx,dx,栈
;后续使用可能需要增加栈保存


;原理:(分两种情况)
;例1:123    / 任意的两位数字
;123/10 = 1 ...3   3压栈(即dx压栈)
;12/10 = 1 ... 2   2压栈(即dx压栈)
;1/10 = 1 ... 0    1压栈(即ax压栈)
;最后全部弹栈,   所以结果为:    123


;例2:108    
;108/10 = 10 ... 8 8压栈(即dx压栈)
;10/10 = 1 ... 0   0压栈，1压栈 (即dx先压栈,然后再将ax压栈)

;例3: 90
;90/10 = 9 ... 0        
;9/10 = 9 ... 0

stackdiv16:   push si
              mov si,0

cricle:       cmp ax,99     ;如果超过2位数，则跳走
              jae cricle2

cricle1:      mov bx,10
              div bx

              cmp dx,0
              jbe  next1     ;余数比0小就退出，代表数据全部处理完毕         ;;bug?
              
              push dx
              inc si
              mov dx,0

              jmp cricle1

cricle2:      mov bx,10
              div bx
              push dx
              mov dx,0
              div bx
              push dx
              push ax
              add si,3
              jmp next2

next1:        push ax
              inc si
next2:        cmp si,0
              jbe next3         ;如果计数器小于0，则结束

              pop bx
              dec si
              mov ah,2
              mov dl,bl
              add dl,30h
              int 21h

              jmp next2

 
next3:        call CR2          ;回车和换行
              pop si            
              ret
              


    CR2:    mov ah,2
            mov dl,0ah
            int 21h   
            mov ah,2
            mov dl,0dh
            int 21h
            ret